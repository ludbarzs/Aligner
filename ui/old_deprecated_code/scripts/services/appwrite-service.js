import { Client, Account, Databases } from 'appwrite';

// Initialize Appwrite Client
const client = new Client()
    .setEndpoint('http://localhost/v1') // Your Appwrite endpoint
    .setProject('YOUR_PROJECT_ID');     // Your project ID

const account = new Account(client);

export const appwriteService = {
    // Create a new user account
    async createAccount(email, password, name) {
        try {
            const response = await account.create(
                'unique()', // Unique ID will be generated by Appwrite
                email,
                password,
                name
            );
            
            if (response) {
                // Create session (login) after successful account creation
                return await this.login(email, password);
            }
        } catch (error) {
            throw new Error(error.message);
        }
    },

    // Login user
    async login(email, password) {
        try {
            return await account.createEmailSession(email, password);
        } catch (error) {
            throw new Error(error.message);
        }
    },

    // Logout user
    async logout() {
        try {
            return await account.deleteSession('current');
        } catch (error) {
            throw new Error(error.message);
        }
    },

    // Get current user
    async getCurrentUser() {
        try {
            return await account.get();
        } catch (error) {
            console.error('Error getting current user:', error);
            return null;
        }
    },

    // Check if user is logged in
    async isLoggedIn() {
        try {
            const user = await this.getCurrentUser();
            return !!user;
        } catch {
            return false;
        }
    }
}; 